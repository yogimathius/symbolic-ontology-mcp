# Original package information
[package]
name = "symbol-ontology-mcp"
version = "0.1.0"
edition = "2021"
authors = ["Mathius Johnson <info@yogimathius.dev>"]
license = "MPL-2.0 OR Commercial"
description = "Symbol Ontology with Model Context Protocol (MCP) integration"
repository = "https://github.com/nexus-flow/symbol-ontology"

# Define workspace - new configuration
[workspace]
members = [
    ".",                   # Include the root crate
    "ontology-core",
    "ontology-api-server",
    "symbol-mcp-client"
]

# Define workspace-wide properties
[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Mathius Johnson <dev@yogimathius.dev>"]
license = "MPL-2.0 OR Commercial"

# The root crate is now just a workspace, no lib or bin targets
# We've moved all functionality to subprojects

[[test]]
name = "integration"
path = "tests/lib.rs"

# Keep the existing dependencies for now
[dependencies]
# Internal crates
ontology-core = { path = "./ontology-core" }
ontology-api-server = { path = "./ontology-api-server" }

# Async runtime
tokio = { version = "1.44.2", features = ["full", "macros"] }

# Error handling
anyhow = "1.0.98"
thiserror = "2.0.12"

# Futures
futures = "0.3.30"

# Serialization
serde = "1.0.219"
serde_json = { version = "1.0.140", features = ["preserve_order"] }

# Command line argument parsing
clap = { version = "4.4", features = ["derive"] }

# Logging
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

# MCP implementation
rmcp = { version = "0.1.5", features = ["server", "transport-sse-server", "transport-sse", "client"] }

# Database dependencies
sqlx = { version = "0.7", features = ["runtime-tokio", "postgres", "json", "uuid", "time", "sqlite"] }
pgvector = { version = "0.4", features = ["sqlx"] }
csv = "1.2"
zip = "0.6"
tokio-util = { version = "0.7.15", features = ["full"] }
fern = "0.7.1"
humantime = "2.2.0"
log = "0.4.27"

# Async traits
async-trait = "0.1.88"

# HTTP
hyper = { version = "1.6.0", features = ["full"] }
hyper-util = { version = "0.1.3", features = ["tokio"] }
axum = "0.8.3"
axum-macros = "0.5.0"
tower-http = { version = "0.6.2", features = ["cors", "trace"] }
reqwest = { version = "0.11", features = ["json", "blocking", "multipart"] }
tokio-stream = "0.1.15"
tokio-tungstenite = "0.21.0"

# Utilities
uuid = { version = "1.7.0", features = ["v4"] }
pin-project-lite = "0.2.13"
dotenvy = "0.15"

# Required for transitive dependencies
defer-rs = "0.1.0"
cfg-if = "1.0.0"
dirs = "6.0.0"

[dev-dependencies]
# Testing utilities
reqwest = { version = "0.11", features = ["json", "blocking", "multipart"] }
async-trait = "0.1.88"
tokio-test = "0.4.4"
tower = "0.5.2"
uuid = { version = "1.7.0", features = ["v4"] }

# Workspace command aliases
[workspace.metadata.commands]
# Start the MCP client standalone
mcp-client = { command = "cargo run --bin symbol-mcp --package symbol-mcp-client" }
# Start the API server
api-server = { command = "cargo run --bin ontology-api-server --package ontology-api-server" }
# Run the full stack (requires external tooling like cargo-workspaces or cargo-run-script)
full-stack = { command = "echo 'Please use separate terminal windows to run the API server and MCP client'" }
# Test all components
test-all = { command = "cargo test --workspace" }
